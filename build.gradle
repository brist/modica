defaultTasks 'clean', 'test', 'integrationTest','assemble'

subprojects {subProject ->
    apply plugin: 'java'
    apply plugin: 'eclipse'
    compileJava.options.fork([memoryMaximumSize: '1024m'])
    jar.baseName = "afp-parse_$subProject.name"

    buildDir = "build"
    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    group = 'org.afpparser'

    repositories {
        mavenCentral()
    }

    configurations {
        jacoco
    }

    //configurations {
    //    coverage
   // }


    dependencies {
        testCompile group: "junit", name: "junit", version: "4.8.1"

        jacoco group: "org.jacoco", name: "org.jacoco.agent", version: "0.5.6.201201232323", classifier: "runtime"
        //coverage group: "org.jacoco", name: "org.jacoco.ant", version: "0.5.6.201201232323", packaging: "eclipse-plugin"
    }

    classes.doLast {
        copy {
            into 'build/libs/lib'
            from configurations.runtime
        }
    }

    test {
        jvmArgs "-javaagent:" + configurations.jacoco.asPath + "=destfile=" + buildDir + "/jacoco.exec,includes=org.afpparser.*"
    }


    task jacocoCoverage << {
        ant {
            taskdef(name:'jacocoreport', classname:'org.jacoco.ant.ReportTask') {
	        classpath {
		 fileset (dir: '/usr/share/ant/lib')
		}
	    }

	    mkdir dir: "${buildDir}/reports/coverage"

	    jacocoreport {
	        executionData {
		    file("${buildDir}/jacoco.exec") 
		}

		structure(name: project.name) {
		    classfiles {
		        fileset dir: "build/classes/main" 
		    }

		    sourcefiles() {
		        fileset dir: "src/main/java" 
		    }
		}
	        xml destfile: "${buildDir}/jacoco.xml"
	        html destdir: "${buildDir}/reports/coverage"
	    }

        }
    }
}
